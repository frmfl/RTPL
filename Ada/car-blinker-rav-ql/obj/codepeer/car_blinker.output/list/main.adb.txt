--# 3 errors, 76 messages
--#
pragma Profile(Ravenscar);
with Bcontrol;use Bcontrol;
with Control; use Control;
--with Gio;
--with Reg_Het;
with System; use System;


with Ada.Real_Time;use Ada.Real_Time;
procedure Main is
    --#main.adb:10:1: module: main
    --#main.adb:10:1: subp: main'Elab_Subp_Spec
    --#main.adb:10:1: end of subp: main'Elab_Subp_Spec
    --#main.adb:10:1: module: main__body
    --#main.adb:10:1: subp: main
    --#main.adb:10:1: ?subp never returns: main
    --#input(main): Command.new_command
    --#input(main): nul
    --#output(main): Command.command
    --#output(main): Command.new_command
    --#main.adb:10:1: end of subp: main
    --#main.adb:10:1: subp: main'Elab_Subp_Body
    --#input(main'Elab_Subp_Body): bcontrol.command_typeN
    --#input(main'Elab_Subp_Body): bcontrol.command_typeS
    --#input(main'Elab_Subp_Body): bcontrol.command_typeS(1..18)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...)'First)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...)'Last)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))(0)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))(1)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))(2)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))(3)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))(4)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))(5)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))(6)
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))._first
    --#output(main'Elab_Subp_Body): ((1, 4, 7, ...))._last
    --#output(main'Elab_Subp_Body): (bcontrol.command_typeN'First)
    --#output(main'Elab_Subp_Body): (bcontrol.command_typeN'Last)
    --#output(main'Elab_Subp_Body): (bcontrol.command_typeS'First)
    --#output(main'Elab_Subp_Body): (bcontrol.command_typeS'Last)
    --#output(main'Elab_Subp_Body): bcontrol.command_typeN
    --#output(main'Elab_Subp_Body): bcontrol.command_typeN(0)
    --#output(main'Elab_Subp_Body): bcontrol.command_typeN(1)
    --#output(main'Elab_Subp_Body): bcontrol.command_typeN(2)
    --#output(main'Elab_Subp_Body): bcontrol.command_typeN(3)
    --#output(main'Elab_Subp_Body): bcontrol.command_typeN(4)
    --#output(main'Elab_Subp_Body): bcontrol.command_typeN(5)
    --#output(main'Elab_Subp_Body): bcontrol.command_typeN(6)
    --#output(main'Elab_Subp_Body): bcontrol.command_typeS
    --#output(main'Elab_Subp_Body): bcontrol.command_typeS(1..18)
    --#output(main'Elab_Subp_Body): nul
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...)'First) = 0
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))'First = 0
    --#post(main'Elab_Subp_Body): (bcontrol.command_typeN'First) = 0
    --#post(main'Elab_Subp_Body): nul = 0
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...)'Last) = 6
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))'Last = 6
    --#post(main'Elab_Subp_Body): (bcontrol.command_typeN'Last) = 6
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...)) = &((1, 4, 7, ...))
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))(0) = 1
    --#post(main'Elab_Subp_Body): (bcontrol.command_typeS'First) = 1
    --#post(main'Elab_Subp_Body): bcontrol.command_typeN(0) = 1
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))(1) = 4
    --#post(main'Elab_Subp_Body): bcontrol.command_typeN(1) = 4
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))(2) = 7
    --#post(main'Elab_Subp_Body): bcontrol.command_typeN(2) = 7
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))(3) = 10
    --#post(main'Elab_Subp_Body): bcontrol.command_typeN(3) = 10
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))(4) = 13
    --#post(main'Elab_Subp_Body): bcontrol.command_typeN(4) = 13
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))(5) = 16
    --#post(main'Elab_Subp_Body): bcontrol.command_typeN(5) = 16
    --#post(main'Elab_Subp_Body): ((1, 4, 7, ...))(6) = 19
    --#post(main'Elab_Subp_Body): bcontrol.command_typeN(6) = 19
    --#post(main'Elab_Subp_Body): (bcontrol.command_typeS'Last) = 18
    --#post(main'Elab_Subp_Body): bcontrol.command_typeS(1..18) in (66 | 69 | 76..77 | 80 | 82..84)
    --#main.adb:10:1: end of subp: main'Elab_Subp_Body
   --pragma Priority(Priority'Last);

   Stop : Boolean := False;
    --#main.adb:13:4: Warning: unused assignment
    --#    into Stop
    --#    severity: SUPPRESSED
    --#    module: main__body
    --#    subp: main
    --#    Attribs:  Uncertain
   S: String(1..5) := (others => ASCII.NUL);
   --CMD : BControl.Command_Type := (1 => 'b', 2 => 'l', 3 => 's');
   CMD : BControl.Command_Type;
begin
--   Init;
--   Gio.Gio_Set_Direction(Reg_Het.hetPort1'Access, 16#FFFFFFFF#);

   loop
      --Control.Put_Line("Before Get_Line");
      S := Control.Get_Line;
    --#main.adb:23:9: Warning: loop does not complete normally
    --#    
    --#    severity: MEDIUM
    --#    module: main__body
    --#    subp: main
    --#    dead bb: bb_4
    --#main.adb:23:9: subp: main.L_1.B5b._finalizer
    --#main.adb:23:9: end of subp: main.L_1.B5b._finalizer
      Control.Put_Line("Got Data");
      Control.Put_Line(S);
      --CMD := Bcontrol.Command_Type(S(1..3));
      CMD := BControl.Command_Type'Value(S(1..3));
    --#main.adb:27:35: ?raise Constraint_Error
    --#    (value_enumeration_8 (command_typeS, command_typeN'address, 5, ...)) <= 5
    --#    severity: SUPPRESSED
    --#    module: main__body
    --#    subp: main
    --#    basic block: bb_6
    --#    assertion: (value_enumeration_8 (command_typeS, command_typeN'address, 5, ...)) <= 5
    --#    VN: system.val_enum.value_enumeration_8'Result@27
    --#    Expected: {0..5}
    --#    Bad: {6..2_147_483_647}
    --#    Attribs:  Int  Exp in +/-1000  Bad overlaps +/-1000  Bad > Exp  Uncertain

      Bcontrol.Command.Send(CMD);
    --#main.adb:29:23: ?precondition
    --#    on bcontrol.command_access.sendP: requires (soft) _object.command'Initialized
    --#    severity: SUPPRESSED
    --#    module: main__body
    --#    subp: main
    --#    basic block: bb_6
    --#    assertion: (soft) bcontrol.command_access.sendP._object.command'Initialized
    --#    callee: bcontrol.command_access.sendP
    --#    callee assertion: (soft) _object.command'Initialized
    --#    callee file: bcontrol.adb
    --#    callee precondition index: [2147483647]
    --#    callee srcpos: 8
    --#    VN: bcontrol.command_access.sendP._object.command
    --#    Expected: {-Inf..+Inf}
    --#    Bad: {Invalid}
    --#    Attribs:  Int  Soft  Bad only invalid
   end loop;


   --     Blinker_Control.Blink_Stop;
end;
    --#main.adb:: end of module: main
    --#main.adb:: end of module: main__body
